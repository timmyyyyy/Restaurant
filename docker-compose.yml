version: '3.4'

services:
  registry:
    image: registry:2.7
    ports:
     - "5000:5000"
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -S http://localhost:5000/v2/_catalog || exit 1"]
      interval: 5s
      timeout: 20s
      retries: 10
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: ${DB_SA_PASSWORD}
      ACCEPT_EULA: Y
    ports:
      - "5433:1433"
    volumes:
      - restaurant-sqldata:/var/opt/mssql
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${DB_SA_PASSWORD} -Q "SELECT 1" -b -o /dev/null
      interval: 5s
      timeout: 20s
      retries: 10
      start_period: 10s
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 20s
      retries: 5
  orders.api:
    image: localhost:5000/ordersapi
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      rabbitmq:
        condition: service_healthy
      registry:
        condition: service_healthy
    build:
      context: ./
      dockerfile: ./src/services/Orders/Orders.API/Dockerfile
  restaurant.api:
    image: localhost:5000/restaurantapi
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      rabbitmq:
        condition: service_healthy
      registry:
        condition: service_healthy
    build:
      context: ./
      dockerfile: ./src/services/Restaurant/Restaurant.API/Dockerfile
volumes:
  restaurant-sqldata: